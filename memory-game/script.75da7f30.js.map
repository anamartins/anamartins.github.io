{"version":3,"sources":["script.js"],"names":["document","addEventListener","onDOMReady","numberCards","control","pair","maxTries","tries","position","flippedCards","setHearts","createControlArray","createContainer","hearts","querySelector","i","random","Math","floor","div","createElement","appendChild","className","img","src","p","container","card","classList","dataset","number","id","placeCards","setTimeout","showAllCards","flipAllCards","num","querySelectorAll","raffle","spin","onCardClick","cardFront","cardImg","cardBack","imgBack","length","add","remove","getCardPosition","setCardsOnPlace","cards","getBoundingClientRect","containerPosition","top","left","style","transitionDuration","push","parentNode","flipCards","crossHeart","gameOver","hasWon","crossed","innerText","childNodes","finish","delay","visibility","button","playAgain","collectCards","window","innerWidth","width","innerHeight","height","gameOverDiv","winnerDiv","drawCards","cleanHearts","putCardsOnPlace","parent"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", onDOMReady);\n\n// could be a number between 5 and 15; the numbers of cards will be the double of this number\nlet numberCards = 10;\n// this array will measure how many times each card is being used; the limit is 2\nlet control = [];\n// this array will check whether the pair matches or not\nlet pair = [];\nlet maxTries = 3;\nlet tries = 3;\n// get the position of the cards\n// when we collect the cards and distribute them again we need to know where to put those cards\nlet position = [];\n// how many pairs the player did correctly\nlet flippedCards = 0;\n\nfunction onDOMReady() {\n  setHearts();\n  createControlArray();\n  createContainer();\n}\n\nfunction setHearts() {\n  let hearts = document.querySelector(\".hearts\");\n\n  for (let i = 0; i < maxTries; i++) {\n    // we have two different types of heart and here we will randomly choose them\n    let random = Math.floor(Math.random() * 2);\n\n    let div = document.createElement(\"div\");\n    hearts.appendChild(div);\n    div.className = \"heart\";\n\n    let img = document.createElement(\"img\");\n    img.src = \"../img/heart\" + random + \".svg\";\n    div.appendChild(img);\n\n    let p = document.createElement(\"p\");\n    div.appendChild(p);\n  }\n}\n\nfunction createControlArray() {\n  for (let i = 0; i < numberCards; i++) {\n    control[i] = 0;\n  }\n}\n\nfunction createContainer() {\n  let container = document.querySelector(\".container\");\n  for (let i = 0; i < numberCards * 2; i++) {\n    let card = document.createElement(\"div\");\n    card.classList = \"card\";\n    card.dataset.number = i;\n    container.appendChild(card);\n    card.dataset.id = \"empty\";\n\n    placeCards(i);\n  }\n  setTimeout(showAllCards, 500);\n  setTimeout(flipAllCards, 2500);\n}\n\nfunction placeCards(num) {\n  let card = document.querySelectorAll(\".card\");\n  // here we raffle the card position\n  let raffle = Math.floor(Math.random() * numberCards);\n\n  // if the card has already been used 2 times, we need to raffle again\n  while (control[raffle] === 2) {\n    raffle = Math.floor(Math.random() * numberCards);\n  }\n\n  let spin = document.createElement(\"div\");\n  spin.className = \"spin\";\n  card[num].appendChild(spin);\n  spin.addEventListener(\"click\", onCardClick);\n\n  let cardFront = document.createElement(\"div\");\n  cardFront.className = \"card-front\";\n  spin.appendChild(cardFront);\n  let cardImg = document.createElement(\"img\");\n  cardImg.src = `cards/card-${raffle}.svg`;\n  card[num].dataset.id = raffle;\n  cardFront.appendChild(cardImg);\n\n  let cardBack = document.createElement(\"div\");\n  cardBack.className = \"card-back\";\n  spin.appendChild(cardBack);\n  let imgBack = document.createElement(\"img\");\n  imgBack.src = \"cards/back.svg\";\n  cardBack.appendChild(imgBack);\n\n  // we sum 1 on the array position; when this number is 2 means we can't have this card anymore\n  control[raffle] += 1;\n}\n\nfunction showAllCards() {\n  let div = document.querySelectorAll(\".spin\");\n  for (let i = 0; i < div.length; i++) {\n    // the class spin-click will flip the cards\n    div[i].classList.add(\"spin-click\");\n  }\n}\n\nfunction flipAllCards() {\n  let div = document.querySelectorAll(\".spin-click\");\n\n  for (let i = 0; i < div.length; i++) {\n    // when we remove the class spin-click, the card turn back to the original position\n    div[i].classList.remove(\"spin-click\");\n  }\n  getCardPosition();\n  setCardsOnPlace();\n}\n\nfunction getCardPosition() {\n  let cards = document.querySelectorAll(\".card\");\n\n  for (let i = 0; i < numberCards * 2; i++) {\n    let card = cards[i];\n    position[i] = card.getBoundingClientRect();\n  }\n}\n\nfunction setCardsOnPlace() {\n  let cards = document.querySelectorAll(\".card\");\n  let container = document.querySelector(\".container\");\n  let containerPosition = container.getBoundingClientRect();\n  let { top, left } = containerPosition;\n  for (let i = 0; i < numberCards * 2; i++) {\n    let card = cards[i];\n\n    card.style.left = `${position[i].left - left}px`;\n    card.style.top = `${position[i].top - top}px`;\n    card.style.transitionDuration = \"1s\";\n\n    card.style.position = \"absolute\";\n  }\n}\n\nfunction onCardClick() {\n  // the class spin-click will flip the cards\n  this.classList.add(\"spin-click\");\n\n  if (pair.length === 0) {\n    pair.push(this.parentNode);\n  } else if (pair.length === 1) {\n    pair.push(this.parentNode);\n\n    if (pair[0].dataset.id !== pair[1].dataset.id) {\n      setTimeout(flipCards, 1000);\n      tries -= 1;\n      crossHeart();\n      if (tries === 0) {\n        gameOver();\n      }\n    } else {\n      pair = [];\n      flippedCards += 1;\n\n      if (flippedCards === numberCards) {\n        hasWon();\n      }\n    }\n  }\n}\n\nfunction crossHeart() {\n  let container = document.querySelector(\".hearts\");\n  let hearts = container.querySelectorAll(\".heart\");\n  let number = maxTries - tries - 1;\n\n  let crossed = hearts[number].querySelector(\"p\");\n  crossed.innerText = \"x\";\n}\n\nfunction flipCards() {\n  for (let i = 0; i < pair.length; i++) {\n    let div = pair[i].childNodes[0];\n    // when we remove the class spin-click, the card turn back to the original position\n    div.classList.remove(\"spin-click\");\n  }\n  pair = [];\n}\n\nfunction gameOver() {\n  finish(\"game-over\", 0);\n}\n\nfunction hasWon() {\n  finish(\"win\", 500);\n}\n\nfunction finish(className, delay) {\n  let div = document.querySelector(`.${className}`);\n\n  setTimeout(() => {\n    div.style.visibility = \"visible\";\n    let button = div.querySelector(\"button\");\n    button.addEventListener(\"click\", playAgain);\n  }, 4500 + delay);\n\n  setTimeout(flipAllCards, 1500 + delay);\n  setTimeout(collectCards, 2500 + delay);\n}\n\nfunction collectCards() {\n  let cards = document.querySelectorAll(\".card\");\n\n  for (let i = 0; i < numberCards * 2; i++) {\n    let left = window.innerWidth / 2 - position[0].width;\n    let top = window.innerHeight / 2 - position[0].height;\n    let card = cards[i];\n\n    card.style.top = top + \"px\";\n    card.style.left = left + \"px\";\n    card.style.transitionDuration = \"1s\";\n  }\n}\n\nfunction playAgain() {\n  let gameOverDiv = document.querySelector(\".game-over\");\n  let winnerDiv = document.querySelector(\".win\");\n\n  tries = maxTries;\n  pair = [];\n  control = [];\n  flippedCards = 0;\n\n  setTimeout(() => {\n    gameOverDiv.style.visibility = \"hidden\";\n    winnerDiv.style.visibility = \"hidden\";\n  }, 200);\n\n  drawCards();\n  cleanHearts();\n\n  setTimeout(putCardsOnPlace, 1000);\n  setTimeout(showAllCards, 2500);\n  setTimeout(flipAllCards, 4500);\n}\n\nfunction cleanHearts() {\n  let container = document.querySelector(\".hearts\");\n  let hearts = container.querySelectorAll(\".heart\");\n\n  for (let i = 0; i < maxTries; i++) {\n    let crossed = hearts[i].querySelector(\"p\");\n    crossed.innerText = \"\";\n  }\n}\n\nfunction drawCards() {\n  let cards = document.querySelectorAll(\".card\");\n  createControlArray();\n\n  for (let i = 0; i < numberCards * 2; i++) {\n    let card = cards[i];\n    let raffle = Math.floor(Math.random() * numberCards);\n\n    while (control[raffle] === 2) {\n      raffle = Math.floor(Math.random() * numberCards);\n    }\n\n    let parent = card.querySelector(\".spin\");\n    let cardFront = parent.querySelector(\".card-front\");\n    let cardImg = cardFront.querySelector(\"img\");\n    cardImg.src = `cards/card-${raffle}.svg`;\n    card.dataset.id = raffle;\n\n    control[raffle] += 1;\n  }\n}\n\nfunction putCardsOnPlace() {\n  let cards = document.querySelectorAll(\".card\");\n  let container = document.querySelector(\".container\");\n  let containerPosition = container.getBoundingClientRect();\n  let { top, left } = containerPosition;\n  for (let i = 0; i < numberCards * 2; i++) {\n    let card = cards[i];\n\n    card.style.left = `${position[i].left - left}px`;\n    card.style.top = `${position[i].top - top}px`;\n\n    card.style.transitionDuration = \"1s\";\n  }\n}\n"]}